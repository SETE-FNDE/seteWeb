branches:
  only:
    - master
    - dev

image: 
  - Visual Studio 2017
  - Ubuntu2004
  - macos-bigsur

platform:
  - x64

clone_depth: 5

environment:
  # APPVEYOR_VNC_BLOCK: true
  APPVEYOR_YML_DISABLE_PS_LINUX: true
  nodejs_version: "18"

for:
  - 
    matrix:
      only:
        - image: macos-bigsur
    init:
      - sh: cd $HOME/projects/seteWeb
  - 
    matrix:
      only:
        - image: Ubuntu2004
    init:
      # Install basic packages in Ubuntu
      # - sh: sudo apt-get update
      - sh: sudo apt-get install -y fakeroot dpkg rpm
  - 
    matrix:
      only:
        - image: Visual Studio 2017
    init:
      # Init (set x64 VC) on Windows
      - cmd: call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
      
# Install scripts
install:
  # - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  # - sh: curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh' | bash -e -
  # - sh: curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-vnc.sh' | bash -e -

  # Add Wix to Windows Build Path
  - cmd: dir "c:\Program Files (x86)\WiX Toolset"*
  - cmd: set PATH="c:\Program Files (x86)\WiX Toolset v3.11\bin";%PATH%

  # Get the latest LTS version of Node.js in Windows
  - ps: Install-Product node $env:nodejs_version x64

  # Set NPM in Windows to use Visual Studio 2017 and Python x64
  # For some reason, newest version of npm are not allowing this config
  - cmd: npm install -g npm@^8
  - cmd: npm config set msvs_version "2017"
  - cmd: npm config set python "C:\\Python35-x64\\pythonw.exe"

  # Get the latest LTS version of Node.js in MAC and Linux
  # - sh: nvm install $nodejs_version
  - sh: nvm use $nodejs_version
  
  # Install Yarn
  - sh: npm install yarn
  
  # Install Packages
  - cmd: npm install 
  - cmd: npm install exe-icon-extractor
  - sh: npm install --no-optional
  # Mac-OS specific packages
  - sh: if test ${APPVEYOR_BUILD_WORKER_IMAGE} = "macOS-BigSur"; then npm install dmg-license; fi

  # Webify
  - ps: .\webify.ps1
  - sh: chmod +x webify.sh
  - sh: chmod +x webify_macos.sh

  # Linux and MacOS Webify
  - sh: echo ${APPVEYOR_BUILD_WORKER_IMAGE}
  - sh: if test ${APPVEYOR_BUILD_WORKER_IMAGE} = "Ubuntu2004"; then ./webify.sh; fi
  # - sh: if test ${APPVEYOR_BUILD_WORKER_IMAGE} = "macOS-BigSur"; then ./webify_macos.sh; fi
  
build_script:
  - cmd: set PATH=C:\projects\seteWeb\node_modules\.bin;%PATH%
  - npm run make

artifacts:
  - path: "\\out\\make\\wix\\x64\\sete*"
    name: WinBinaries
  - path: "\\out\\make\\deb\\x64\\sete*"
    name: UbuntuBinaries
  - path: "\\out\\make\\sete*"
    name: MacBinaries


deploy:
  release: SETE-v$(APPVEYOR_REPO_TAG_NAME)
  description: 'AUTOMATIC BUILD'
  provider: GitHub
  draft: true
  auth_token: 
    secure: o9FnGoA7kIQPmz6pI/uzpPbOrolyu2jgAzTVV7Ld6TdbmM3pSh60UR7PU2B9FzpF
  artifact: WinBinaries, UbuntuBinaries, MacBinaries
  on:
    branch: master
    APPVEYOR_REPO_TAG: true

on_finish:
  - cmd: ECHO Exiting...
  - sh: echo Exiting...
  # - sh: export APPVEYOR_SSH_BLOCK=true
  # - sh: curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh' | bash -e -
  # - sh: export APPVEYOR_VNC_BLOCK=true
  # - sh: curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-vnc.sh' | bash -e -
  # - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

